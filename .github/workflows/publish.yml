name: Publish
on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  publish_extension:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Node Version
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.16.1
      - name: Restore lerna cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build extension
        run: sh build-ext.sh
      - uses: actions/upload-artifact@v2
        name: Upload Extension Zip
        with:
          name: stacks-wallet-chromium
          path: stacks-wallet-chromium.zip
      - name: Sign Production Firefox version
        continue-on-error: true
        run: yarn web-ext sign --channel=listed
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
      - uses: actions/upload-artifact@v2
        name: Upload Firefox Add-On XPI
        with:
          name: connect-addon
          path: web-ext-artifacts/*.xpi

  deploy-prod-apps:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Node Version
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.16.1
      - name: Restore lerna cache
        id: lerna-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install monorepo deps
        run: yarn --frozen-lockfile
      - name: Build Blockstack Test App
        env:
          AUTH_ORIGIN: https://app.blockstack.org
        run: yarn prod:web
        working-directory: packages/test-app
      - name: Copy Blockstack Test App vercel.json
        uses: canastro/copy-file-action@master
        with:
          source: 'packages/test-app/vercel.json'
          target: 'packages/test-app/dist/vercel.json'
      - uses: amondnet/vercel-action@d4e0a9f55bfc7ee4d87dd69541f2c93c8e4e8ae6
        id: vercel-deployment-production
        name: Deploy test app to production
        if: github.event_name == 'push' ||  github.event_name == 'release'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_TEST_APP }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_SCOPE }}
          working-directory: packages/test-app/dist

  publish_npm:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare repository
        run: git checkout master
      - name: Set Node Version
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.16.1
      - name: Restore lerna cache
        id: lerna-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install monorepo deps
        run: yarn --frozen-lockfile
      - name: Setup .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - name: Publish
        run: yarn lerna publish from-package --conventional-commits --yes
