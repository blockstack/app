name: Bootstrap
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set Node Version
      uses: actions/setup-node@v1
      with:
        node-version: 12.16.1
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Monorepo Dependencies
      run: yarn --frozen-lockfile
    - name: Lerna Bootstrap
      run: yarn lerna bootstrap
    - name: Build libraries
      run: yarn build:ui && yarn build:keychain
  
  codecheck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set Node Version
      uses: actions/setup-node@v1
      with:
        node-version: 12.16.1
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Monorepo Dependencies
      run: yarn --frozen-lockfile
    - name: Lerna Bootstrap
      run: yarn lerna bootstrap
    - name: Prettier
      run:  yarn lerna run lint:prettier --parallel
    - name: ESLint
      run:  yarn lerna run lint:eslint --parallel
    - name: Depcheck
      run: yarn lerna run depcheck --parallel
    - name: Typecheck
      run: yarn lerna run typecheck --parallel
